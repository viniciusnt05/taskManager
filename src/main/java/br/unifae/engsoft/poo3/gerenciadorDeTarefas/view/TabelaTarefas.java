package br.unifae.engsoft.poo3.gerenciadorDeTarefas.view;
import br.unifae.engsoft.poo3.gerenciadorDeTarefas.controller.TarefaController;
import br.unifae.engsoft.poo3.gerenciadorDeTarefas.model.GerenciadorDeTarefas;
import br.unifae.engsoft.poo3.gerenciadorDeTarefas.model.Tarefa;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class TabelaTarefas extends javax.swing.JFrame {

    private TarefaController controller;    
    private GerenciadorDeTarefas<Tarefa> gerenciador;
    

    public TabelaTarefas(TarefaController controller) {
        initComponents();
        this.controller = controller;
        this.gerenciador = controller.getGerenciador(); // Chama o gerenciador de tarefas pelo controller
        atualizarTabela();
        this.setLocationRelativeTo(null);
    }
    
    public void atualizarTabela() {
        DefaultTableModel model = controller.getTabelaTarefas(controller.listarTarefas());
        jTable.setModel(model);
    }
    
    private void excluirTarefa() {
        int selectedRow = jTable.getSelectedRow(); // Puxa a linha selecionada
        if (selectedRow != -1) { // Verificar se alguma linha foi de fato selecionada ou não
            int modelRow = jTable.convertRowIndexToModel(selectedRow);
            DefaultTableModel model = (DefaultTableModel) jTable.getModel();

            // Busca a tarefa pela descrição
            String descricaoTarefa = (String) model.getValueAt(modelRow, 0);

            // Chama o Controller para remover a tarefa
            boolean removida = controller.removerTarefaPorDescricao(descricaoTarefa);

            if (removida) {
                model.removeRow(modelRow); // Deletando da tabela
                JOptionPane.showMessageDialog(this, "Tarefa removida com sucesso!");
                atualizarTabela(); // Atualiza a tabela depois de deletar
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao encontrar a tarefa.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "É necessário selecionar uma Tarefa a ser removida.");
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jbtnCadastrar = new javax.swing.JButton();
        jbtnExcluir = new javax.swing.JButton();
        jbtnAtualizar = new javax.swing.JButton();
        jcomboFiltroPrioridade = new javax.swing.JComboBox<>();
        jcomboFiltroPrazo = new javax.swing.JComboBox<>();
        jbtnLimpar = new javax.swing.JButton();
        jbtnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(57, 62, 70));

        jTable.setBackground(new java.awt.Color(0, 173, 181));
        jTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable.setForeground(new java.awt.Color(170, 216, 211));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Descrição", "Data Criação", "Prioridade", "Prazo", "Concluída"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setSelectionBackground(new java.awt.Color(121, 122, 126));
        jTable.setSelectionForeground(new java.awt.Color(245, 245, 245));
        jScrollPane1.setViewportView(jTable);

        jLabel1.setFont(new java.awt.Font("Samanata", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 173, 184));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Listagem de Tarefas");

        jbtnCadastrar.setBackground(new java.awt.Color(170, 216, 211));
        jbtnCadastrar.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jbtnCadastrar.setText("Cadastrar");
        jbtnCadastrar.setPreferredSize(new java.awt.Dimension(100, 40));
        jbtnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCadastrarActionPerformed(evt);
            }
        });

        jbtnExcluir.setBackground(new java.awt.Color(255, 102, 102));
        jbtnExcluir.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jbtnExcluir.setText("Excluir");
        jbtnExcluir.setPreferredSize(new java.awt.Dimension(100, 40));
        jbtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExcluirActionPerformed(evt);
            }
        });

        jbtnAtualizar.setBackground(new java.awt.Color(255, 204, 51));
        jbtnAtualizar.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jbtnAtualizar.setText("Atualizar");
        jbtnAtualizar.setPreferredSize(new java.awt.Dimension(100, 40));
        jbtnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAtualizarActionPerformed(evt);
            }
        });

        jcomboFiltroPrioridade.setFont(new java.awt.Font("Gadugi", 0, 12)); // NOI18N
        jcomboFiltroPrioridade.setForeground(new java.awt.Color(4, 157, 191));
        jcomboFiltroPrioridade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Prioridade", "Maior Prioridade", "Menor Prioridade", "1", "2", "3", "4", "5" }));
        jcomboFiltroPrioridade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboFiltroPrioridadeActionPerformed(evt);
            }
        });

        jcomboFiltroPrazo.setFont(new java.awt.Font("Gadugi", 0, 12)); // NOI18N
        jcomboFiltroPrazo.setForeground(new java.awt.Color(4, 157, 191));
        jcomboFiltroPrazo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Prazo", "Maior Prazo", "Menor Prazo", "Hoje", "Últimos 7 dias", "Sem Prazo" }));
        jcomboFiltroPrazo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jcomboFiltroPrazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboFiltroPrazoActionPerformed(evt);
            }
        });

        jbtnLimpar.setForeground(new java.awt.Color(4, 157, 191));
        jbtnLimpar.setText("Limpar Filtros");
        jbtnLimpar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLimparActionPerformed(evt);
            }
        });

        jbtnSair.setBackground(new java.awt.Color(204, 204, 204));
        jbtnSair.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jbtnSair.setText("Sair");
        jbtnSair.setPreferredSize(new java.awt.Dimension(100, 40));
        jbtnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jcomboFiltroPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jcomboFiltroPrazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jbtnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcomboFiltroPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomboFiltroPrazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCadastrarActionPerformed
        FormularioTarefa cadastraTarefas = new FormularioTarefa(controller);
        cadastraTarefas.setVisible(true);
        dispose();
    }//GEN-LAST:event_jbtnCadastrarActionPerformed

    private void jbtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExcluirActionPerformed
        excluirTarefa();
    }//GEN-LAST:event_jbtnExcluirActionPerformed

    private void jbtnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAtualizarActionPerformed
        int selectedRow = jTable.getSelectedRow();
        if (selectedRow != -1) { 
            int modelRow = jTable.convertRowIndexToModel(selectedRow);
            DefaultTableModel model = (DefaultTableModel) jTable.getModel();

            // Busca a tarefa pela descrição
            String descricaoTarefa = (String) model.getValueAt(modelRow, 0); 
            Tarefa tarefaParaAtualizar = gerenciador.buscarTarefaPorDescricao(descricaoTarefa);

            if (tarefaParaAtualizar != null) {
                // Já abrir a tela com a tarefa que foi selecionada e os campos preenchidos
                AtualizaTarefas atualizaTarefas = new AtualizaTarefas(controller, tarefaParaAtualizar);
                atualizaTarefas.setVisible(true);
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao encontrar a Tarefa");
            }
        } else {
            JOptionPane.showMessageDialog(this, "É necessário selecionar uma Tarefa a ser atualizada.");
        }
    }//GEN-LAST:event_jbtnAtualizarActionPerformed

    private void jcomboFiltroPrioridadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboFiltroPrioridadeActionPerformed
        String filtroSelecionado = (String) jcomboFiltroPrioridade.getSelectedItem();

        // Bloqueia o índice 0, pois é apenas visual, pro usuário entender que esse é o filtro de prioridade
        if ("Prioridade".equals(filtroSelecionado)) {
            return;
        }

        // Obtém as tarefas filtradas (do controller)
        List<Tarefa> tarefasFiltradas = controller.filtrarPorPrioridade(filtroSelecionado);

        // Atualiza a tabela com as tarefas filtradas
        DefaultTableModel model = controller.getTabelaTarefas(tarefasFiltradas);
        jTable.setModel(model);
    }//GEN-LAST:event_jcomboFiltroPrioridadeActionPerformed

    private void jcomboFiltroPrazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboFiltroPrazoActionPerformed
        String filtroSelecionado = (String) jcomboFiltroPrazo.getSelectedItem();

        // Bloqueia o índice 0, pois é apenas visual, pro usuário entender que esse é o filtro de prazo
        if ("Prazo".equals(filtroSelecionado)) {
            return;
        }

        // Obtém as tarefas filtradas (do controller)
        List<Tarefa> tarefasFiltradas = controller.filtrarPorPrazo(filtroSelecionado);

        // Atualiza a tabela com as tarefas filtradas
        DefaultTableModel model = controller.getTabelaTarefas(tarefasFiltradas);
        jTable.setModel(model);
    }//GEN-LAST:event_jcomboFiltroPrazoActionPerformed

    private void jbtnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLimparActionPerformed
        jcomboFiltroPrioridade.setSelectedIndex(0);
        jcomboFiltroPrazo.setSelectedIndex(0);
        atualizarTabela();
    }//GEN-LAST:event_jbtnLimparActionPerformed

    private void jbtnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSairActionPerformed
        dispose();
    }//GEN-LAST:event_jbtnSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TarefaController controller = new TarefaController(); // Chama o controller
                new FormularioTarefa(controller).setVisible(true); // Passa o controller para a tela, pra não zerar e perder as tarefas já criadas anteriormente
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton jbtnAtualizar;
    private javax.swing.JButton jbtnCadastrar;
    private javax.swing.JButton jbtnExcluir;
    private javax.swing.JButton jbtnLimpar;
    private javax.swing.JButton jbtnSair;
    private javax.swing.JComboBox<String> jcomboFiltroPrazo;
    private javax.swing.JComboBox<String> jcomboFiltroPrioridade;
    // End of variables declaration//GEN-END:variables
}
